import os

from telebot import types
from services.product_service import ProductService
from services.cart_service import CartService
from utils.keyboards import main_menu

def register(bot):
    """–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞"""

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥" ---
    @bot.message_handler(func=lambda m: m.text == "üõçÔ∏è –ö–∞—Ç–∞–ª–æ–≥")
    def show_categories(message):
        categories = ProductService.get_all_categories()
        if not categories:
            bot.send_message(message.chat.id, "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.", reply_markup=main_menu())
            return

        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
        markup = types.InlineKeyboardMarkup(row_width=2)
        buttons = []
        for cat in categories:
            button = types.InlineKeyboardButton(text=cat.name, callback_data=f"category_{cat.id}")
            buttons.append(button)
        markup.add(*buttons)

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:", reply_markup=markup)

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ---
    @bot.callback_query_handler(func=lambda call: call.data.startswith("category_"))
    def show_products_by_category(call):
        cat_id = int(call.data.split("_")[1])
        products = ProductService.get_products_by_category(cat_id)

        if not products:
            bot.send_message(call.message.chat.id, "–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ç–æ–≤–∞—Ä–æ–≤.", reply_markup=main_menu())
            return

        for p in products:
            text = f"üì¶ {p.name}\nüí∞ –¶–µ–Ω–∞: {p.price} —Ä—É–±."
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É", callback_data=f"add_{p.id}"))
            # –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–æ—Ç–æ –∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ
            if p.photo and os.path.exists(p.photo):
                with open(p.photo, "rb") as photo:
                    bot.send_photo(call.message.chat.id, photo, caption=text, reply_markup=markup)
            else:
                bot.send_message(call.message.chat.id, text, reply_markup=markup)

    # --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π inline-–∫–Ω–æ–ø–æ–∫ "–î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É" ---
    @bot.callback_query_handler(func=lambda call: call.data.startswith("add_"))
    def add_to_cart(call):
        product_id = int(call.data.split("_")[1])
        product = ProductService.get_product_by_id(product_id)
        if not product:
            bot.send_message(call.message.chat.id, "–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–≤–∞—Ä –≤ –∫–æ—Ä–∑–∏–Ω—É (CartService –¥–æ–ª–∂–µ–Ω –ø—Ä–∏–Ω–∏–º–∞—Ç—å id, name, price, quantity)
        from services.cart_service import CartService
        CartService.add_to_cart(
            user_id=call.from_user.id,
            product_id=product.id,
            name=product.name,
            price=product.price,
            quantity=1
        )
        bot.answer_callback_query(call.id, f"{product.name} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É!")
