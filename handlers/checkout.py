from telebot import types
from services.cart_service import CartService
from services.order_service import OrderService
from utils.logger import logger

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_checkout_data = {}

def register(bot):
    """
    –•–µ–Ω–¥–ª–µ—Ä—ã –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞–∫–∞–∑–∞
    """

    # --- Inline-–∫–Ω–æ–ø–∫–∞ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ ---
    @bot.callback_query_handler(func=lambda call: call.data == "checkout:start")
    def start_checkout_from_cart(call):
        user_id = call.from_user.id
        cart = CartService.get_cart(user_id)
        if not cart:
            bot.answer_callback_query(call.id, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞!")
            return

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ—Ä–∑–∏–Ω—É –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
        user_checkout_data[user_id] = {"cart": cart}
        bot.answer_callback_query(call.id)

        # –ù–∞—á–∞–ª–æ –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö
        msg = bot.send_message(call.message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è:")
        bot.register_next_step_handler(msg, process_name)

    # --- –í–≤–æ–¥ –∏–º–µ–Ω–∏ ---
    def process_name(message):
        user_checkout_data[message.from_user.id]["name"] = message.text
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:")
        bot.register_next_step_handler(msg, process_phone)

    # --- –í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ---
    def process_phone(message):
        user_checkout_data[message.from_user.id]["phone"] = message.text
        msg = bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏:")
        bot.register_next_step_handler(msg, process_address)

    # --- –í–≤–æ–¥ –∞–¥—Ä–µ—Å–∞ –∏ –≤—ã–±–æ—Ä —Å–ø–æ—Å–æ–±–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ---
    def process_address(message):
        user_checkout_data[message.from_user.id]["address"] = message.text

        keyboard = types.InlineKeyboardMarkup()
        keyboard.add(types.InlineKeyboardButton("üöö –ö—É—Ä—å–µ—Ä–æ–º", callback_data="delivery:courier"))
        keyboard.add(types.InlineKeyboardButton("üè™ –°–∞–º–æ–≤—ã–≤–æ–∑", callback_data="delivery:pickup"))

        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Å–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏:", reply_markup=keyboard)

    # --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—ã–±–æ—Ä–∞ –¥–æ—Å—Ç–∞–≤–∫–∏ ---
    @bot.callback_query_handler(func=lambda call: call.data.startswith("delivery:"))
    def process_delivery(call):
        user_id = call.from_user.id
        delivery_type = call.data.split(":")[1]

        data = user_checkout_data.get(user_id)
        if not data:
            bot.answer_callback_query(call.id, "–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
            return

        cart = data["cart"]
        total = sum(item.price * item.quantity for item in cart)

        order_data = {
            "name": data["name"],
            "phone": data["phone"],
            "address": data["address"],
            "delivery": delivery_type
        }

        # --- –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ ---
        # try:
        print(user_id)
        print(cart)
        print(order_data)
        print(total)
        order = OrderService.create_order(
            user_id=user_id,
            cart_items=cart,  # —ç—Ç–æ —É–∂–µ –æ–±—ä–µ–∫—Ç—ã CartItem
            user_data=order_data,
            total=total
        )
        # except Exception as e:
        #     bot.answer_callback_query(call.id)
        #     bot.send_message(call.message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.\n{e}")
        #     logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
        #     return

        if not order:
            bot.answer_callback_query(call.id)
            bot.send_message(call.message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
            return

        # –û—á–∏—Å—Ç–∫–∞ –∫–æ—Ä–∑–∏–Ω—ã –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        CartService.clear_cart(user_id)
        user_checkout_data.pop(user_id, None)

        bot.answer_callback_query(call.id)
        if delivery_type == 'pickup':
            delivery_type = '–°–∞–º–æ–≤—ã–≤–æ–∑'
        else:
            delivery_type = '–ö—É—Ä—å–µ—Ä–æ–º'
        bot.send_message(
            call.message.chat.id,
            f"‚úÖ –ó–∞–∫–∞–∑ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n–ù–æ–º–µ—Ä –∑–∞–∫–∞–∑–∞: {order['id']}\n–°—É–º–º–∞: {total} —Ä—É–±.\n–°–ø–æ—Å–æ–± –¥–æ—Å—Ç–∞–≤–∫–∏: {delivery_type}"
        )

        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Å–æ–∑–¥–∞–ª –∑–∞–∫–∞–∑ {order['id']} –Ω–∞ —Å—É–º–º—É {total} —Ä—É–±.")
